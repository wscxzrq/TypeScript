{"version":3,"sources":["assets/defaultposter.png","pages/services/CommonType.ts","pages/Home.tsx","components/MovieTable.tsx","pages/services/MovieService.ts","redux/actions/MovieAction.ts","pages/movie/MovieList.tsx","components/ImgUpload.tsx","components/MovieForm.tsx","pages/movie/AddMovie.tsx","pages/movie/EditMovie.tsx","pages/Layout.tsx","redux/reducers/MovieReducer.ts","redux/reducers/RootReducer.ts","redux/store.ts","App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","SwitchType","react_default","a","createElement","React","Component","this","props","onLoad","_this","style","padding","input","value","condition","key","onChange","e","onKeyChange","target","width","marginBottom","display","onPressEnter","onSearch","es_button","type","icon","size","marginRight","onClick","_this2","title","dataIndex","render","poster","alt","className","src","defaultposterImg","filterDropdown","getFilterDropDown","bind","filterIcon","text","join","timeLog","isHot","record","es_switch","checked","newVal","onSwitchChange","_id","isComing","isClasic","id","react_router_dom","to","popconfirm","onConfirm","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","onDelete","message","success","stop","okText","cancelText","total","current","page","pageSize","limit","pagination","table","rowKey","dataSource","data","columns","getColums","getPageConfig","handleChange","loading","isLoading","MovieService","classCallCheck","createClass","_add","movie","_ref","axios","post","sent","abrupt","_x","apply","arguments","_edit","_callee2","_ref2","_context2","put","_x2","_x3","_delete2","_callee3","_ref3","_context3","delete","_x4","_getMovieById","_callee4","_ref4","_context4","get","_x5","_getMovies","_callee6","_context6","Promise","resolve","setTimeout","_callee5","_ref6","_context5","params","_x6","saveMoviesAction","movies","payload","setLoadingAction","setConditionAction","deleteAction","changeSwitchAction","MovieAction","fetchMovies","dispatch","getState","curCondition","resp","getMovies","deleteMovie","changeSwitch","edit","defineProperty","MovieContainer","connect","state","newState","_onDelete","newPage","HOC","MovieTable","showModal","uid","name","url","formData","FormData","append","filename","file","request","Request","action","method","body","fetch","then","json","err","error","upload","accept","listType","fileList","getFileList","customRequest","handleRequest","onRemove","onPreview","getUploadContent","modal","visible","footer","onCancel","formItemLayout","labelCol","span","wrapperCol","offset","AllAreas","label","AllTypes","AreaGroups","Checkbox","Group","MovieForm","preventDefault","form","validateFields","result","getFieldsValue","onSubmit","history","push","getFieldDecorator","es_form","assign","handleSubmit","Item","rules","required","ImgUpload_default","options","input_number","min","step","initialValue","valuePropName","TextArea","htmlType","withRouter","Form","create","mapPropsToFields","obj","createFormField","getDefaultField","components_MovieForm","add","undefined","getMovieById","match","setState","Header","Layout","Sider","Content","_Layout","layout","menu","mode","theme","react_router","path","component","Home","exact","MovieList","AddMovie","EditMovie","defaultState","totalPage","rootReducer","combineReducers","length","objectSpread","filter","m","Math","ceil","setLoading","saveMovie","setCondition","find","d","newMovie","newData","map","store","createStore","applyMiddleware","thunk","logger","App","es","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.22347d35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultposter.b4e877ba.png\";","export interface IResponseError {\n  err: string;\n  data: null;\n}\n\nexport interface IResponseData<T> {\n  err:''\n  data:T\n}\n\nexport interface IResponsePageData<T> {\n  err:''\n  data:T[],\n  total:number\n}\n\nexport interface ISearchConditions {\n  page?:number\n  limit?:number\n  key?:string\n}\n\n// switch 改变的枚举\nexport enum SwitchType {\n  isHot = 'isHot',\n  isComing = 'isComing',\n  isClasic = 'isClasic'\n}","import React from \"react\"\r\n\r\nexport default class extends React.Component {\r\n    render(){\r\n        return (\r\n            <h1>\r\n                欢迎使用电影管理系统\r\n            </h1>\r\n        );\r\n    }\r\n}","import React from 'react'\nimport { IMovieState } from '../redux/reducers/MovieReducer'\nimport {Table,Switch,Button,message,Popconfirm,Icon,Input } from 'antd'\nimport { ColumnProps, PaginationConfig } from 'antd/lib/table'\nimport { IMovie } from '../pages/services/MovieService'\nimport defaultposterImg from '../assets/defaultposter.png'\nimport { SwitchType } from '../pages/services/CommonType'\nimport {NavLink} from 'react-router-dom'\nexport interface IMovieTableEvents {\n  /**\n   * 完成加载之后的事件\n   */\n  onLoad: () => void,\n  /**\n   * 是否热映改变事件\n   */\n  onSwitchChange: (type:SwitchType, newState:boolean, id:string) => void,\n  /**\n   * 删除电影事件\n   */\n  onDelete:(id:string) => Promise<void>,\n  /**\n   *  分页事件\n   */\n  onChange:(newPage:number) => void,\n  /**\n   * 根据名称查找电影\n   */\n  onKeyChange:(key:string) => void\n  /**\n   * 点击按钮进行搜索电影\n   */\n  onSearch:() => void\n}\n\n\nexport default class extends React.Component<IMovieState & IMovieTableEvents> {\n  // 组件完成加载\n  componentDidMount(): void {\n    if(this.props.onLoad) {\n      this.props.onLoad();\n    }\n  }\n\n\n  // 筛选\n  private getFilterDropDown(p:any) {\n    return (\n      <div style={{ padding: 8 }}>\n        <Input\n          value={this.props.condition.key}\n          onChange={e => this.props.onKeyChange(e.target.value)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n          onPressEnter={this.props.onSearch}\n        />\n        <Button\n          type=\"primary\"\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n          onClick={this.props.onSearch}\n        >\n          搜索\n        </Button>\n        <Button  size=\"small\" style={{ width: 90 }} onClick={() => {\n          this.props.onKeyChange('')\n          this.props.onSearch()\n        }}>\n          重置\n        </Button>\n      </div>\n    )\n  }\n\n  // 获取列的配置\n  private getColums():ColumnProps<IMovie>[] {\n    return [\n      {\n        title:'类型',\n        dataIndex:'poster',\n        render: poster => {\n          return poster ? <img alt='' className='tablePoster' src={poster}></img> : <img alt='' className='tablePoster' src={defaultposterImg}></img>\n        }\n      },\n      {\n        title:'电影名称',\n        dataIndex:'name',\n        filterDropdown: this.getFilterDropDown.bind(this),\n        filterIcon:<Icon type='search'></Icon>\n      },\n      {\n        title:'类型',\n        dataIndex:'types',\n        render:(text:string[]) => {\n          return text.join(', ') \n        }\n      },\n      {\n        title:'时长',\n        dataIndex:'timeLong',\n        render: timeLog => {\n          return timeLog + '分钟'\n        }\n      },\n      {\n        title:'正在热映',\n        dataIndex:'isHot',\n        render: (isHot,record) => {\n          return <Switch checked={isHot} onChange={(newVal) => {\n            this.props.onSwitchChange(SwitchType.isHot,newVal,record._id!)\n          }} />\n        }\n      },\n      {\n        title:'即将上映',\n        dataIndex:'isComing',\n        render: (isComing,record) => {\n          return <Switch checked={isComing} onChange={(newVal) => {\n            this.props.onSwitchChange(SwitchType.isComing,newVal,record._id!)\n          }} />\n        }\n      },\n      {\n        title:'经典影片',\n        dataIndex:'isClasic',\n        render: (isClasic,record) => {\n          return <Switch checked={isClasic} onChange={(newVal) => {\n            this.props.onSwitchChange(SwitchType.isClasic,newVal,record._id!)\n          }} />\n        }\n      },\n      {\n        title:'操作',\n        dataIndex:'_id',\n        render: (id:string) => {\n          return (\n            <div>\n              <NavLink to={\"/movie/edit/\" + id}>\n                <Button type='primary' size=\"small\" >编辑</Button>\n              </NavLink>\n              <Popconfirm\n                title=\"确定要删除吗?\"\n                onConfirm={async () => {\n                  await this.props.onDelete(id);\n                  message.success('删除成功');\n                }}\n                okText=\"确定\"\n                cancelText=\"取消\"\n              >\n              <Button type=\"danger\" size=\"small\">删除</Button>\n            </Popconfirm>,\n            </div>\n          )\n        }\n      },\n    ]\n  }\n  // 分页配置函数\n  getPageConfig():PaginationConfig | false {\n    if(this.props.total === 0) {\n      return false\n    } else {\n      return {\n        current:this.props.condition.page,\n        pageSize:this.props.condition.limit,\n        total:this.props.total\n      }\n    } \n  }\n  // 分页函数\n  handleChange(pagination:PaginationConfig) {\n    this.props.onChange(pagination.current!)\n  }\n  render() {\n    return (\n      <Table rowKey='_id' dataSource={this.props.data} columns={this.getColums()} pagination={this.getPageConfig()}\n        onChange={this.handleChange.bind(this)} loading={this.props.isLoading}></Table>\n    )\n  }\n}","// 电影相关的 ajax 请求\nimport axios from \"axios\";\nimport { IResponseData, IResponseError, IResponsePageData, ISearchConditions } from \"./CommonType\";\nexport interface IMovie {\n    _id?:string\n    name:string\n    types:string[];\n    areas:string[];\n    timeLong:number;\n    isHot:boolean;\n    isComing:boolean;\n    isClasic:boolean;\n    description?:string; // 简介\n    poster:string; // 海报\n}\n\nexport class MovieService {\n  // 添加函数\n  public static async add(movie:IMovie):Promise<IResponseError | IResponseData<IMovie> > {\n    const { data } = await axios.post('/api/movie',movie);\n    return data\n  }\n\n  // 修改\n  /**\n   * Partial 类型演算，所有属性全部可选\n   */\n  public static async edit(id:string,movie:Partial<IMovie>):Promise<IResponseError | IResponseData<true> > {\n    const { data } = await axios.put('/api/movie'+ id,movie);\n    return data\n  }\n\n  // 删除\n  public static async delete(id:string):Promise<IResponseError | IResponseData<true> > {\n    const { data } = await axios.delete('/api/movie'+ id);\n    return data\n  }\n\n  // 获取单个电影\n  public static async getMovieById(id:string):Promise<IResponseData<IMovie | null> > {\n    const { data } = await axios.get('/api/movie'+ id);\n    return data\n  }\n\n  // 分页查找\n  public static async getMovies(condition:ISearchConditions):Promise<IResponsePageData<IMovie> > {\n    return new Promise(resolve => {\n      setTimeout(async () => {\n        const { data } = await axios.get('/api/movie',{params:condition});\n        resolve(data)\n      },1500)\n    })\n  }\n  \n}","import { ISearchConditions, SwitchType } from \"../../pages/services/CommonType\"\nimport { IMovie, MovieService } from \"../../pages/services/MovieService\"\nimport { IAction } from \"./ActionTypes\"\nimport { ThunkAction} from \"redux-thunk\"\nimport { IRootState } from '../reducers/RootReducer';\n// action 的创建函数\nexport type saveMoviesAction = IAction<\"movie_save\",{\n  movies:IMovie[],\n  total:number\n}> \n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nfunction saveMoviesAction (movies:IMovie[],total:number):saveMoviesAction {\n  return {\n    type:'movie_save', // 保存一个电影\n    payload:{\n      // 负载、载荷\n      movies,\n      total\n    }\n  }\n}\n\nexport type SetLoadingAction = IAction<\"move_setLoading\",boolean>\n/**\n * 设置加载状态的 Action\n * @param isLoading \n * @returns \n */\nfunction setLoadingAction(isLoading:boolean):SetLoadingAction {\n  return {\n    type:'move_setLoading',\n    payload:isLoading\n  }\n}\n\nexport type SetConditionAction = IAction<\"movie_setConition\",ISearchConditions>\n/**\n * 设置查询条件的 Action\n * @param condition \n * @returns \n */\nfunction setConditionAction(condition:ISearchConditions):SetConditionAction {\n  return {\n    type:\"movie_setConition\",\n    payload:condition\n  }\n}\n\nexport type DeleteAction = IAction<\"movie_delete\",string>;\n/**\n * 删除 Action\n * @param id \n * @returns \n */\nfunction deleteAction(id:string):DeleteAction {\n  return {\n    type:\"movie_delete\",\n    payload:id\n  }\n}\n\nexport type MovieActions = saveMoviesAction | SetLoadingAction | SetConditionAction | DeleteAction | MovieChangeSwitchAction\n\n// 根据条件从服务器获取电影数据\nfunction fetchMovies(condition:ISearchConditions):ThunkAction<Promise<void>,IRootState,any,MovieActions> {\n  return async (dispatch,getState) => {\n    // 1.设置加载状态\n    dispatch(setLoadingAction(true));\n    // 2.设置条件\n    dispatch(setConditionAction(condition));\n    // 3.获取服务器数据\n    const curCondition = getState().movie.condition;\n    const resp = await MovieService.getMovies(curCondition);\n    // 4.更改仓库数据\n    dispatch(saveMoviesAction(resp.data,resp.total))\n    // 关闭加载状态\n    dispatch(setLoadingAction(false));\n  }\n}\n\n// 根据条件从服务器删除电影数据\nfunction deleteMovie(id:string) :ThunkAction<Promise<void>,IRootState,any,MovieActions>  {\n  return async (dispatch) => {\n    dispatch(setLoadingAction(true));\n    await MovieService.delete(id);\n    dispatch(deleteAction(id)); // 删除本地仓库中的数据\n    dispatch(setLoadingAction(false));\n  }\n}\n\nexport type MovieChangeSwitchAction = IAction<'movie_switch',{\n  type:SwitchType,newVal:boolean,id:string\n}>\n\nfunction changeSwitchAction(type:SwitchType,newVal:boolean,id:string):MovieChangeSwitchAction {\n  return {\n    type:'movie_switch',\n    payload: {\n      type,\n      newVal,\n      id\n    }\n  }\n}\n\nfunction changeSwitch(type:SwitchType,newVal:boolean,id:string):ThunkAction<Promise<void>,IRootState,any,MovieActions> {\n  return async (dispatch) => {\n    dispatch(changeSwitchAction(type,newVal,id));\n    await MovieService.edit(id,{[type]:newVal})\n  }\n}\n\nexport default {\n  saveMoviesAction,\n  setLoadingAction,\n  setConditionAction,\n  deleteAction,\n  fetchMovies,\n  deleteMovie,\n  changeSwitchAction,\n  changeSwitch,\n}","import React, { Dispatch } from \"react\"\r\nimport MovieTable, { IMovieTableEvents } from \"../../components/MovieTable\";\r\nimport {connect} from 'react-redux'\r\nimport { IRootState } from \"../../redux/reducers/RootReducer\";\r\nimport MovieAction from \"../../redux/actions/MovieAction\";\r\nimport { IMovieState } from \"../../redux/reducers/MovieReducer\";\r\n\r\n// 数据与界面进行连接\r\nfunction mapStateToProps(state:IRootState):IMovieState {\r\n  return state.movie;\r\n}\r\n\r\nconst HOC = connect(mapStateToProps,mapDispatchToProps) // 返回一个函数是一个高阶组件\r\nconst MovieContainer = HOC(MovieTable) // 容器组件\r\n\r\nfunction mapDispatchToProps(dispatch:Dispatch<any>):IMovieTableEvents {\r\n  return {\r\n    onLoad() {\r\n      dispatch(MovieAction.fetchMovies({\r\n        page:1,\r\n        limit:10,\r\n        key:''\r\n      }))\r\n    },\r\n    onSwitchChange(type,newState,id) {\r\n      dispatch(MovieAction.changeSwitch(type,newState,id));\r\n    },\r\n    async onDelete(id) {\r\n     await dispatch(MovieAction.deleteMovie(id));\r\n    },\r\n    onChange(newPage) {\r\n      dispatch(MovieAction.fetchMovies({page:newPage}))\r\n    },\r\n    onKeyChange(key) {\r\n      dispatch(MovieAction.fetchMovies({key}))\r\n    },\r\n    onSearch() {\r\n      dispatch(MovieAction.fetchMovies({\r\n        page:1,\r\n      }))\r\n    },\r\n  }\r\n}\r\nexport default class extends React.Component {\r\n    render(){\r\n        return (\r\n            <MovieContainer />\r\n        );\r\n    }\r\n}","import { Icon, Upload,message,Modal } from \"antd\";\nimport { UploadFile } from \"antd/lib/upload/interface\";\nimport React from \"react\";\nimport { IResponseData, IResponseError } from \"../pages/services/CommonType\";\n// 图片上传\n\ninterface IImgUploaderProps {\n  value?:string // 当前图片地址\n  onChange?:(imgUrl:string) => void // 上传成功后的触发事件\n}\n\ninterface IImgState {\n  showModal:boolean\n}\nexport default class extends React.Component<IImgUploaderProps,IImgState> {\n\n  state:IImgState = {\n    showModal:false\n  }\n\n  private getUploadContent() {\n    if(this.props.value) {\n      return null\n    }else {\n      return ( \n        <div>\n          <Icon type=\"plus\" />\n          <div>点击上传</div>\n        </div>\n      )\n    }\n  }\n\n  /**\n   * 生成图片数组\n   */\n  private getFileList():UploadFile[] {\n    if(this.props.value) {\n      return [\n        {\n          uid:this.props.value,\n          name:this.props.value,\n          url:this.props.value\n        }\n      ]\n    }\n    return []\n  }\n\n  /**\n   * 图片上传函数\n   * @param info 图片上传信息\n   */\n  async handleRequest(p:any) {\n    let formData = new FormData();\n    formData.append(p.filename,p.file);\n    // fetch api\n    const request = new Request(p.action,{\n      method: 'post', // 请求方法\n      body:formData, // 上传的数据\n    })\n    const resp:IResponseData<string> | IResponseError =  await fetch(request).then(resp => resp.json())\n    if(resp.err) {\n      // 有错误\n      message.error('上传失败')\n    }else {\n      // 触发回调\n      if(this.props.onChange) {\n        this.props.onChange(resp.data!)\n      }\n    }\n  }\n\n  render() {\n    return(\n      <div>\n      <Upload action='/api/upload' name=\"imgfile\" accept=\".jpg,.png,.gif\" listType=\"picture-card\" fileList={this.getFileList()}\n        customRequest={this.handleRequest.bind(this)} onRemove={() => {\n          if(this.props.onChange) {\n            this.props.onChange('')\n          }\n        }} onPreview={() => {\n          this.state.showModal = true\n        }}>\n        {this.getUploadContent()}\n      </Upload>\n        <Modal visible={this.state.showModal} footer={null} onCancel={() => {\n          this.state.showModal = false\n        }}>\n          <img alt=\"example\" style={{ width: '100%' }} src={this.props.value} />\n        </Modal>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport {Button, Checkbox, Form, Input, InputNumber, Switch, message} from 'antd'\nimport { WrappedFormUtils } from 'antd/lib/form/Form'\nimport { IMovie } from '../pages/services/MovieService';\nimport ImgUpload from './ImgUpload';\nimport { IResponseData, IResponseError } from '../pages/services/CommonType';\nimport { RouteComponentProps, withRouter } from 'react-router';\n// 表单组件\n// RouteComponentProps react 的路由组件，可以访问路由属性\ninterface IFormProp extends RouteComponentProps<any> {\n  form:WrappedFormUtils\n  onSubmit:(movie:IMovie) => Promise<string>\n  movie?:IMovie\n}\nconst formItemLayout = {\n  labelCol: {\n    span:4\n  },\n  wrapperCol: {\n    span:19,\n    offset:1\n  },\n};\nconst AllAreas:{label:string,value:string}[] = [\n  { label: '中国大陆', value: '中国大陆' },\n  { label: '美国', value: '美国' },\n  { label: '中国台湾', value: '中国台湾' },\n  { label: '中国香港', value: '中国香港' },\n];\n\nconst AllTypes:{label:string,value:string}[] = [\n  { label: '喜剧', value: '喜剧' },\n  { label: '灾难', value: '灾难' },\n  { label: '动作', value: '动作' },\n  { label: '爱情', value: '爱情' },\n];\n\nconst AreaGroups = Checkbox.Group\nclass MovieForm extends React.Component<IFormProp> {\n  /**\n   * 提交函数\n   */\n  private handleSubmit(e:React.FormEvent<any>) {\n    e.preventDefault();\n    // 获取表单数据\n    this.props.form.validateFields(async error => {\n      if(!error) {\n        const formData = this.props.form.getFieldsValue();\n        const result = await this.props.onSubmit(formData as IMovie);\n        if(!result) {\n          message.success('提交成功',1,() => {\n            // 跳转页面\n            this.props.history.push('/movie')\n          })\n        }else {\n          message.error(result)\n        }\n      }\n    })\n  }\n  render() {\n    const {getFieldDecorator} = this.props.form\n    return (\n      <Form style={{width:'400px'}} {...formItemLayout} onSubmit={\n        this.handleSubmit.bind(this)\n      }>\n        <Form.Item label='电影名称'>\n          {/* 装饰表单域 */}\n          {/* getFieldDecorator<IMovie> 对表单中的 key 进行约束 */}\n          {getFieldDecorator<IMovie>(\"name\",{\n            rules:[{required:true,message:'电影名称不允许为空'}]\n          })(<Input/>) }\n        </Form.Item>\n        <Form.Item label='封面图'>\n          {getFieldDecorator<IMovie>(\"poster\",{\n            // valuePropName:\"对应的 key\" 高阶函数默认会对包装的组件传递一个为 value 的值，如果组件内部接收的值不是 value 字段，可以使用valuePropName进行重新映射\n          })(<ImgUpload />) }\n        </Form.Item>\n        <Form.Item label='地区'>\n          {getFieldDecorator<IMovie>(\"areas\",{\n            rules:[{required:true,message:'请选择地区'}]\n          })(<AreaGroups options={AllAreas} />) }\n        </Form.Item>\n        <Form.Item label='类型'>\n          {getFieldDecorator<IMovie>(\"types\",{\n            rules:[{required:true,message:'请选择类型'}]\n          })(<AreaGroups options={AllTypes} />) }\n        </Form.Item>\n        <Form.Item label='时长(分钟)'>\n          {getFieldDecorator<IMovie>(\"timeLong\",{\n            rules:[{required:true,message:'请输入时长'}]\n          })(<InputNumber min={1} step={10}/>) }\n        </Form.Item>\n        <Form.Item label='正在上映'>\n          {getFieldDecorator<IMovie>(\"isHot\",{\n            initialValue:false,\n            valuePropName:'checked'\n          })(<Switch/>) }\n        </Form.Item>\n        <Form.Item label='即将上映'>\n          {getFieldDecorator<IMovie>(\"isComing\",{\n            initialValue:false,\n            valuePropName:'checked'\n          })(<Switch/>) }\n        </Form.Item>\n        <Form.Item label='经典影片'>\n          {getFieldDecorator<IMovie>(\"isClasic\",{\n            initialValue:false,\n            valuePropName:'checked'\n          })(<Switch/>) }\n        </Form.Item>\n        <Form.Item label='描述'>\n          {getFieldDecorator<IMovie>(\"description\",{\n          })(<Input.TextArea/>) }\n        </Form.Item>\n        <Form.Item labelCol={{span:0}} wrapperCol={{span:20,offset:4}}>\n          <Button type='primary' htmlType='submit'>提交</Button>\n        </Form.Item>\n      </Form>\n    )\n  }\n}\ntype MovieFields = {\n  [P in Exclude<keyof IMovie,\"_id\">]:any\n}\nfunction getDefaultField(movie:IMovie):MovieFields {\n  const obj:any = {}\n  for (const key in movie) {\n    obj[key] = Form.createFormField({\n      value:movie[key]\n    })\n  }\n  return obj\n}\n// withRouter react 路由高阶组件\nexport default withRouter(Form.create<IFormProp>({\n  mapPropsToFields:props => {\n    if(props.movie) {\n      return  getDefaultField(props.movie)\n    }\n  }\n})(MovieForm))","import React from \"react\"\r\nimport MovieForm from \"../../components/MovieForm\";\r\nimport { MovieService } from \"../services/MovieService\";\r\n\r\nexport default class extends React.Component {\r\n    render(){\r\n        return (\r\n          <MovieForm onSubmit={async (movie) => {\r\n            const resp = await MovieService.add(movie)\r\n            return resp.data ? '' : resp.err;\r\n          }}></MovieForm>\r\n        );\r\n    }\r\n}","import React from \"react\"\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport MovieForm from \"../../components/MovieForm\";\r\nimport { IMovie, MovieService } from \"../services/MovieService\";\r\n\r\ninterface IParams {\r\n  id: string\r\n}\r\n\r\ninterface EditPageState {\r\n  movie?:IMovie\r\n}\r\nexport default class extends React.Component<RouteComponentProps<IParams>,EditPageState> {\r\n  state:EditPageState = {\r\n    movie:undefined\r\n  }  \r\n\r\n  async componentDidMount() {\r\n    const resp = await MovieService.getMovieById(this.props.match.params.id)\r\n    if(resp.data) {\r\n     this.setState({\r\n      movie:resp.data\r\n     }) \r\n    }\r\n  }\r\n  render() {\r\n        return (\r\n          <MovieForm\r\n            movie={this.state.movie} \r\n            onSubmit={async (movie) => {\r\n              const resp = await MovieService.edit(this.props.match.params.id,movie)\r\n              return resp.data ? '' : resp.err;\r\n          }}>\r\n          </MovieForm>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport MovieList from \"./movie/MovieList\";\r\nimport AddMovie from \"./movie/AddMovie\";\r\nimport EditMovie from \"./movie/EditMovie\";\r\nimport { Layout, Menu } from \"antd\";\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nconst _Layout: React.FC = function () {\r\n  return (\r\n    <div className=\"container\">\r\n      <Layout>\r\n        <Header className=\"header\">\r\n          <NavLink to=\"/\">猫眼电影管理系统</NavLink>\r\n        </Header>\r\n        <Layout>\r\n          <Sider>\r\n            <Menu mode=\"inline\" theme=\"dark\">\r\n              <Menu.Item key=\"1\">\r\n                <NavLink to=\"/movie\">电影列表</NavLink>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"2\">\r\n                <NavLink to=\"/movie/add\">添加电影</NavLink>\r\n              </Menu.Item>\r\n              {/* <Menu.Item key=\"3\">\r\n                <NavLink to=\"/movie/add\"></NavLink>\r\n              </Menu.Item> */}\r\n            </Menu>\r\n          </Sider>\r\n          <Content>\r\n            <div className=\"main\">\r\n              <Route path=\"/\" component={Home} exact={true}></Route>\r\n              <Route path=\"/movie\" exact={true} component={MovieList}></Route>\r\n              <Route path=\"/movie/add\" component={AddMovie}></Route>\r\n              <Route path=\"/movie/edit/:id\" component={EditMovie}></Route>\r\n            </div>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default _Layout;\r\n","// 描述电影列表的状态类型\n\nimport { Reducer } from \"react\";\nimport { ISearchConditions } from \"../../pages/services/CommonType\";\nimport { IMovie } from \"../../pages/services/MovieService\";\nimport { DeleteAction, MovieActions, MovieChangeSwitchAction, SetConditionAction, SetLoadingAction, saveMoviesAction } from \"../actions/MovieAction\";\n\n// Required 是 TypeScript 的内置工具之一，接受一个泛型参数，返回一个新的类型，并将其中所有属性变为必填属性 \nexport type IMovieCondition = Required<ISearchConditions>\n\n/**\n * 电影状态\n */\nexport interface IMovieState {\n  /**\n   * 电影数组\n   */\n  data:IMovie[]\n  /**\n   * 查询条件\n   */\n  condition:IMovieCondition\n  /**\n   * 总记录数\n   */\n  total:number\n  /**\n   * 是否正在加载数据\n   */\n  isLoading:boolean,\n  /**\n   * 总页数\n   */\n  totalPage:number\n}\n\n/**\n * 默认电影状态\n */\nconst defaultState:IMovieState = {\n  data:[],\n  condition:{\n    page:1,\n    limit:10,\n    key:''\n  },\n  total:0,\n  isLoading:false,\n  totalPage:0\n}\n\ntype MovieReducer<A> = Reducer<IMovieState,A>\n\nconst saveMovie:MovieReducer<saveMoviesAction> = function (state,action) {\n  return {\n    ...state,\n    data:action.payload.movies,\n    total:action.payload.total,\n    totalPage:Math.ceil(action.payload.total / state.condition.limit)\n  }\n}\n\nconst setCondition:MovieReducer<SetConditionAction> = function (state,action) {\n  const newState = {\n    ...state,\n    condition:{\n      ...state.condition,\n      ...action.payload\n    }\n  }\n  newState.totalPage = Math.ceil(newState.total / newState.condition.limit)\n  return newState\n}\n\nconst setLoading:MovieReducer<SetLoadingAction> = function (state,action) {\n  return {\n    ...state,\n    isLoading:action.payload\n  }\n}\n\nconst deleteMovie:MovieReducer<DeleteAction> = function (state,action) {\n  return {\n    ...state,\n    data:state.data.filter(m => m._id !== action.payload),\n    total:state.total - 1,\n    totalPage:Math.ceil(state.total - 1 / state.condition.limit)\n  }\n}\n\nconst changeSwitch:MovieReducer<MovieChangeSwitchAction> = function (state,action) {\n  const movie = state.data.find(d => d._id === action.payload.id);\n  if(!movie) {\n    return state;\n  }\n  const newMovie = {...movie};\n  newMovie[action.payload.type] = action.payload.newVal;\n  // 将对象重新放入数组\n  const newData = state.data.map(d => {\n    if(d._id === action.payload.id) {\n      return newMovie\n    }\n    return d\n  })\n  return {\n    ...state,\n    data:newData\n  }\n}\n\nexport default function (state:IMovieState = defaultState , action:MovieActions) {\n  switch (action.type) {\n    case \"movie_delete\":\n      return deleteMovie(state,action);\n    case \"move_setLoading\":\n      return setLoading(state,action);\n    case \"movie_save\":\n      return saveMovie(state,action);\n    case \"movie_setConition\":\n      return setCondition(state,action);\n    case 'movie_switch':\n      return changeSwitch(state,action);\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport movie, { IMovieState } from './MovieReducer'\n\n// 整个网站的根状态\nexport interface IRootState {\n  movie:IMovieState\n}\nexport const rootReducer = combineReducers({\n  movie\n})","import { applyMiddleware, createStore } from 'redux'\nimport { IRootState, rootReducer } from './reducers/RootReducer'\nimport logger from \"redux-logger\"\nimport thunk, { ThunkMiddleware } from 'redux-thunk'\nexport const store = createStore(rootReducer,applyMiddleware(thunk as ThunkMiddleware<IRootState>,logger)) ","import React from 'react';\r\nimport Layout from \"./pages/Layout\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport {Provider} from 'react-redux'\r\nimport { store } from './redux/store';\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n      // Provider 根节点，为整个组件树提供数据 \r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n            <Route path=\"/\" component={Layout}></Route>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"antd/dist/antd.css\";\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n// 界面\r\n// antd: UI库"],"sourceRoot":""}